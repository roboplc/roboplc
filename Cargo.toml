[package]
name = "roboplc"
version = "0.6.0"
edition = "2021"
authors = ["Serhij S. <div@altertech.com>"]
license = "Apache-2.0"
description = "Framework for PLCs and real-time micro-services"
repository = "https://github.com/roboplc/roboplc"
keywords = ["realtime", "robots", "plc", "industrial"]
readme = "README.md"
autoexamples = false

[package.metadata.docs.rs]
features = ["full"]

[package.metadata.playground]
features = ["full"]

[dependencies]
atomic-timer = { version = "0.2", features = ["serde"] }
binrw = "0.14.0"
bytemuck = "1.17.1"
bytes = "1.7.1"
bma-ts = { version = "0.1", features = ["serde"] }
colored = "1"
libc = "0.2.153"
nix = { version = "0.29", features = ["signal", "event"] }
object-id = "0.1.3"
oneshot = { version = "0.1.6", default-features = false, features = ["std"] }
pin-project = "1.1.5"
rmodbus = { version = "0.9.4", optional = true }
roboplc-derive = { version = "0.3" }
serde = { version = "1.0", features = ["derive", "rc"] }
serial = "0.4.0"
sysinfo = "0.29"
thiserror = "1.0.57"
tracing = "0.1.40"
signal-hook = "0.3.17"
eva-common = { version = "^0.3.88", default-features = false, features = ["events", "payload", "common-payloads", "acl"], optional = true }
eva-sdk = { version = "^0.3.62", features = ["controller"], optional = true }
busrt = { version = "0.4.9", features = ["rpc", "ipc"], optional = true }
tokio = { version = "1.36.0", optional = true }
hostname = { version = "0.3.1", optional = true }
env_logger = "0.10"
log = "0.4.21"
metrics-exporter-prometheus = { version = "0.16.0", optional = true, default-features = false, features = ["http-listener"] }
metrics-exporter-scope = { version = "0.2.0", optional = true }
metrics = { version = "0.24", optional = true }
snmp2 = { version = "0.3", optional = true }
rtsc = "^0.3.12"
rvideo = { version = "0.5", optional = true, default-features = false }
rflow = { version = "^0.1.1", optional = true, default-features = false }
once_cell = { version = "1.19.0", optional = true }
parking_lot = { version = "0.12.3", optional = true }
parking_lot_rt = { version = "0.12.1", optional = true }
serde_json = { version = "1.0.134", optional = true }
rmp-serde = { version = "1.3.0", optional = true }
egui = { version = "0.31.0", optional = true }
eframe = { version = "0.31.0", optional = true }
evdev = { version = "0.13", optional = true }
winit = { version = "0.30.9", optional = true }

[target.'cfg(windows)'.dependencies]
parking_lot_rt = { version = "0.12.1" }

[features]
eapi = ["dep:eva-common", "dep:eva-sdk", "dep:busrt", "dep:tokio", "dep:hostname", "dep:once_cell"]
pipe = ["tokio/process", "tokio/io-util", "tokio/macros", "tokio/rt", "tokio/time"]
rvideo = ["dep:rvideo"]
rflow = ["dep:rflow"]
modbus = ["dep:rmodbus"]
metrics = ["dep:metrics", "dep:metrics-exporter-prometheus", "dep:metrics-exporter-scope", "dep:tokio"]
async = ["dep:parking_lot_rt"]
hmi = ["dep:egui", "dep:eframe", "dep:winit", "dep:once_cell"]
input-events = ["dep:evdev"]

locking-default = ["dep:parking_lot", "rtsc/parking_lot", "rvideo?/locking-default", "rflow?/locking-default"]
locking-rt = ["dep:parking_lot_rt", "rvideo?/locking-rt", "rflow?/locking-rt"]
locking-rt-safe = ["rvideo?/locking-rt-safe", "rflow?/locking-rt-safe"]

json = ["dep:serde_json"]
msgpack = ["dep:rmp-serde"]

default = ["locking-default"]

full = ["eapi", "modbus", "metrics", "pipe", "rvideo", "rflow", "async", "json", "msgpack",
    "hmi", "input-events"]

[dev-dependencies]
insta = "1.36.1"
log = "0.4.21"
tokio = { version = "=1.36.0", features = ["rt", "macros", "time"] }
tokio-util = "=0.7.11"
tracing = { version = "0.1.40", features = ["log"] }

[[example]]
name = "modbus-master"
path = "examples/modbus-master.rs"
required-features = ["modbus"]

[[example]]
name = "modbus-slave"
path = "examples/modbus-slave.rs"
required-features = ["modbus"]

[[example]]
name = "raw-udp"
path = "examples/raw-udp.rs"

[[example]]
name = "shutdown"
path = "examples/shutdown.rs"

[[example]]
name = "shutdown-custom"
path = "examples/shutdown-custom.rs"

[[example]]
name = "pipe"
path = "examples/pipe.rs"
required-features = ["pipe"]

[[example]]
name = "rflow"
path = "examples/rflow.rs"
required-features = ["rflow"]

[[example]]
name = "eapi"
path = "examples/eapi.rs"
required-features = ["eapi"]

[[example]]
name = "snmp-modbus"
path = "examples/snmp-modbus.rs"
required-features = ["modbus", "snmp2"]

[[example]]
name = "hmi"
path = "examples/hmi.rs"
required-features = ["hmi"]
